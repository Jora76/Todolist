@rendermode InteractiveServer

<div class="todo-item" @onmouseover="() => { IsMouseOver = true; }" @onmouseout="() => { IsMouseOver = false; }">
    <div id="left-part" @onclick="@(() => { Todo.IsComplete = !Todo.IsComplete; })">
        <input id="@Todo.Id" @bind="@Todo.IsComplete" type="checkbox">
        
        @if (!EditMode)
        {
            <span class="todo-description @(Todo.IsComplete ? "done" : "")">@Todo.Description</span>
        }
        else
        {
            <input type="text" class="edit-todo" placeholder="Ex: Do laundry" @bind-value="@Todo.Description" @bind-value:event="oninput" @onkeydown="HandleInput" @ref="_editInput">
        }
    </div>

    @if (IsMouseOver)
    {
        <div id="right-part">
            <div id="edit-button" @onclick="SetEditMode">
                <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                </svg>
            </div>
            <div id="delete-button" @onclick="DeleteSelf">
                <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                    <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>
                </svg>
            </div>
        </div>
    }

</div>

@code 
{
    // Composant de la todoliste représentant une seule tâche.
    // Todo : contient les données de la tâche
    // OnDelete: Appelle la méthode du parent qui supprime la tâche.
    
    
    [Parameter]
    public required Todo Todo { get; set; }
    
    [Parameter]
    public required EventCallback<int> OnDelete { get; set; }
    
    private bool IsMouseOver { get; set; }
    
    private bool EditMode { get; set; }

    private ElementReference _editInput;
    
    private void HandleInput(KeyboardEventArgs e)
    {
        if (e.Key != "Enter" || Todo.Description == "")
        {
            return;
        }
        EditMode = false;
    }

    private void SetEditMode()
    {
        EditMode = true;
        _ = Task.Delay(1).ContinueWith(_ =>
        {
            _editInput.FocusAsync();
        });
    }

    private void DeleteSelf()
    {
        OnDelete.InvokeAsync(Todo.Id);
    }
}